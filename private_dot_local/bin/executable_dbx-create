#!/bin/python

import subprocess
from sys import argv
from os import environ
from pathlib import Path
import os

if len(argv) < 2 or "-h" in argv or "--help" in argv:
    print("usage: dbx-create <container-name> <flags>")
    exit(1)



container_home = os.path.join(environ["DISTROBOX__HOME"], argv[1])
dotfile_home = "/var/home/erb"
print("Container Home: {}".format(container_home))

volumes = [
    f"{dotfile_home}/.config/fish/:{os.path.join(container_home, ".config/fish/")}",
    f"{dotfile_home}/.config/nvim:{os.path.join(container_home, ".config/nvim")}",
    f"{dotfile_home}/.config/gdb:{os.path.join(container_home, ".config/gdb")}",
    f"{dotfile_home}/.config/zellij:{os.path.join(container_home, ".config/zellij")}",
    f"{dotfile_home}/.local/bin/build_container:{os.path.join(container_home, "build_container")}",
    f"{dotfile_home}/.themes:{os.path.join(container_home, ".themes")}",
    f"{dotfile_home}/.icons:{os.path.join(container_home, ".icons")}",
    f"{dotfile_home}/.config/gtk-3.0:{os.path.join(container_home, ".config/gtk-3.0")}",
    f"{dotfile_home}/.config/gtk-4.0:{os.path.join(container_home, ".config/gtk-4.0")}",
    f"{dotfile_home}/.local/share/fonts:{os.path.join(container_home, ".local/share/fonts")}",
    f"{dotfile_home}/.gitconfig:{os.path.join(container_home, ".gitconfig")}",
    f"/var/home/erb/.gnupg:{os.path.join(container_home, ".gnupg")}",
    f"/var/home/erb/.ssh:{os.path.join(container_home, ".ssh")}",
    f"/var/run/docker.sock:/var/run/docker.sock"
]


cmd = f"distrobox-create --name {argv[1]} -H {container_home} {' '.join([f'--volume {v}' for v in volumes])}"
print(cmd)
if "--dry-run" in argv:
    exit(0)

subprocess.run(cmd, shell=True)
subprocess.run(f"distrobox-enter {argv[1]}", shell=True)
